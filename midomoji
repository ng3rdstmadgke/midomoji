#!/bin/bash

function usage {
cat >&2 <<EOF
#####################################################################################
# [ usage ]
#   ./midomoji <MODE> [ options ]
#
#   MODE build-dict      辞書のビルド
#        build-matrix    連接コスト表のビルド
#        build-config    設定ファイルのビルド
#        build-pos-info  品詞設定ファイルのビルド
#        build-meta-info 形態素のメタ情報オブジェクトをビルド
#        check-dict      辞書のチェックを行う
#        check-matrix    連接コスト表のチェックを行う
#        debug           デバッグコンソール起動
#
# [ options ]
#   --force   build*系のモードと合わせて使う。元ファイルが更新されていなくても強制的にビルドを行う
#   -h        ヘルプ
#
#####################################################################################
EOF
exit 1
}

function errlog {
  MSG=$1
  echo "[Error] $MSG" >&2
  exit 1
}

function infolog {
  MSG=$1
  echo "[Info] $MSG" >&2
}

function file_exists {
for file in $@; do
  if [ ! -r "$file" ]; then
    errlog "$file がみつかりません。"
  fi
done
}

function should_build {
  SRC=$1
  CHECK_FILE=$2
  if [ -r "$SRC" -a -r "$CHECK_FILE" ]; then
    if [ "$(md5sum $SRC)" = "$(cat $CHECK_FILE)" ]; then
      return 0
    fi
  fi
  return 1
}

SCRIPT_DIR=$(cd $(dirname $0); pwd)
DICT_DIR=$SCRIPT_DIR/dictionary
RESOURCES_DIR=$SCRIPT_DIR/src/main/resources/
MODE=
FORCE=
while [ "$#" != 0 ]; do
  if [ "$1" = "-h" ]; then
    usage
  elif [ "$1" = "--force" ]; then
    FORCE=$1
  elif [ -z "$MODE" ]; then
    MODE=$1
  fi
  shift
done

if [ -z "$MODE" ]; then
  usage
fi

JAR_FILE=$SCRIPT_DIR/target/scala-2.12/midomoji.jar
file_exists $JAR_FILE

infolog "$MODE"
if [ "$MODE" = "build-dict" ]; then
  MORPHEME=$DICT_DIR/morpheme.tsv
  DICT_BIN=$DICT_DIR/dict.bin
  CHECK_FILE_MORPHEME=${MORPHEME}.${MODE}.check
  file_exists $MORPHEME
  SHOULD_BUILD=$(should_build $MORPHEME $CHECK_FILE_MORPHEME)
  if [ -n "$FORCE" -o "$SHOULD_BUILD" = "1" ]; then
    java -jar $JAR_FILE build-dict $DICT_DIR
    md5sum $MORPHEME > $CHECK_FILE_MORPHEME
    cp $DICT_BIN $RESOURCES_DIR
  else
    infolog "$MORPHEME に更新がないためビルドを行いません。"
  fi 
elif [ "$MODE" = "build-matrix" ]; then
  MATRIX=$DICT_DIR/matrix.tsv
  MATRIX_BIN=$DICT_DIR/matrix.bin
  CHECK_FILE_MATRIX=${MATRIX}.${MODE}.check
  file_exists $MATRIX
  SHOULD_BUILD=$(should_build $MATRIX $CHECK_FILE_MATRIX)
  if [ -n "$FORCE" -o "$SHOULD_BUILD" = "1" ]; then
    java -jar $JAR_FILE build-matrix $DICT_DIR
    md5sum $MATRIX > $CHECK_FILE_MATRIX
    cp $MATRIX_BIN $RESOURCES_DIR
  else
    infolog "$MATRIX に更新がないためビルドを行いません。"
  fi
elif [ "$MODE" = "build-config" ]; then
  CHAR=$DICT_DIR/char.tsv
  CHAR_TYPE=$DICT_DIR/char_type.tsv
  UNK=$DICT_DIR/unk.tsv
  CONFIG_BIN=$DICT_DIR/config.bin
  CHECK_FILE_CHAR=${CHAR}.${MODE}.check
  CHECK_FILE_CHAR_TYPE=${CHAR_TYPE}.${MODE}.check
  CHECK_FILE_UNK=${UNK}.${MODE}.check
  file_exists $CHAR $CHAR_TYPE $UNK
  SHOULD_BUILD1=$(should_build $CHAR      $CHECK_FILE_CHAR)
  SHOULD_BUILD2=$(should_build $CHAR_TYPE $CHECK_FILE_CHAR_TYPE)
  SHOULD_BUILD3=$(should_build $UNK       $CHECK_FILE_UNK)
  if [ -n "$FORCE" -o "$SHOULD_BUILD1" = "1" -o "$SHOULD_BUILD2" = "1" -o "$SHOULD_BUILD2" = "1" ]; then
    java -jar $JAR_FILE build-config $DICT_DIR
    md5sum $CHAR      > $CHECK_FILE_CHAR
    md5sum $CHAR_TYPE > $CHECK_FILE_CHAR_TYPE
    md5sum $UNK       > $CHECK_FILE_UNK
    cp $CONFIG_BIN $RESOURCES_DIR
  else
    infolog "$CHAR $CHAR_TYPE $UNK に更新がないためビルドを行いません。"
  fi
elif [ "$MODE" = "build-pos-info" ]; then
  POS=$DICT_DIR/pos.tsv
  POS_INFO_BIN=$DICT_DIR/pos_info.bin
  CHECK_FILE_POS=${POS}.${MODE}.check
  file_exists $POS
  SHOULD_BUILD=$(should_build $POS $CHECK_FILE_POS)
  if [ -n "$FORCE" -o "$SHOULD_BUILD" = "1" ]; then
    java -jar $JAR_FILE build-pos-info $DICT_DIR
    md5sum $POS > $CHECK_FILE_POS
    cp $POS_INFO_BIN $RESOURCES_DIR
  else
    infolog "$POS に更新がないためビルドを行いません。"
  fi
elif [ "$MODE" = "build-meta-info" ]; then
  MORPHEME=$DICT_DIR/morpheme.tsv
  META_INFO_BIN=$DICT_DIR/meta_info.bin
  CHECK_FILE_MORPHEME=${MORPHEME}.${MODE}.check
  file_exists $MORPHEME
  SHOULD_BUILD=$(should_build $MORPHEME $CHECK_FILE_MORPHEME)
  if [ -n "$FORCE" -o "$SHOULD_BUILD" = "1" ]; then
    java -jar $JAR_FILE build-meta-info $DICT_DIR
    md5sum $MORPHEME > $CHECK_FILE_MORPHEME
    cp $META_INFO_BIN $RESOURCES_DIR
  else
    infolog "$MORPHEME に更新がないためビルドを行いません。"
  fi
elif [ "$MODE" = "check-dict" ]; then
  DICT_BIN=$DICT_DIR/dict.bin
  file_exists $MORPHEME $DICT_BIN
  java -jar $JAR_FILE check-dict $DICT_DIR
elif [ "$MODE" = "check-matrix" ]; then
  MATRIX=$DICT_DIR/matrix.tsv
  MATRIX_BIN=$DICT_DIR/matrix.bin
  file_exists $MATRIX $MATRIX_BIN
  java -jar $JAR_FILE check-matrix $DICT_DIR
elif [ "$MODE" = "debug" ]; then
  java -jar $JAR_FILE debug
else
  usage
fi

