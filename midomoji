#!/bin/bash

function usage {
cat >&2 <<EOF
#####################################################################################
# [ usage ]
#   ./midomoji <MODE> [ options ]
#
#   MODE build-dict    辞書のビルド
#        build-matrix  連接コスト表のビルド
#        build-config  設定ファイルのビルド
#        check-dict    辞書のチェックを行う
#        check-matrix  連接コスト表のチェックを行う
#        debug         デバッグコンソール起動
#
# [ options ]
#   -h        ヘルプ
#
#####################################################################################
EOF
exit 1
}

function errlog {
  MSG=$1
  echo "[Error] $MSG" >&2
  exit 1
}

function infolog {
  MSG=$1
  echo "[Info] $MSG" >&2
}

function file_exists {
for file in $@; do
  if [ ! -r "$file" ]; then
    errlog "$file is not found."
  fi
done
}

DATE=$(date "+%Y%m%d%H%M%S")
SCRIPT_DIR=$(cd $(dirname $0); pwd)
DICT_DIR=$SCRIPT_DIR/dictionary
MORPHEME=$DICT_DIR/morpheme.tsv
MATRIX=$DICT_DIR/matrix.tsv
CHAR=$DICT_DIR/char.tsv
CHAR_TYPE=$DICT_DIR/char_type.tsv
UNK=$DICT_DIR/unk.tsv
DICT_BIN=$DICT_DIR/dict.bin
MATRIX_BIN=$DICT_DIR/matrix.bin
CONFIG_BIN=$DICT_DIR/config.bin
MODE=
while [ "$#" != 0 ]; do
  if [ "$1" = "-h" ]; then
    usage
  elif [ -z "$MODE" ]; then
    MODE=$1
  fi
  shift
done

if [ -z "$MODE" ]; then
  usage
fi

JAR_FILE=$SCRIPT_DIR/target/scala-2.12/midomoji.jar
file_exists $JAR_FILE

if [ "$MODE" = "build-dict" ]; then
  file_exists $MORPHEME
  java -jar $JAR_FILE --build-dict $MORPHEME $DICT_BIN
elif [ "$MODE" = "build-matrix" ]; then
  file_exists $MATRIX
  java -jar $JAR_FILE --build-matrix $MATRIX $MATRIX_BIN
elif [ "$MODE" = "build-config" ]; then
  file_exists $CHAR $CHAR_TYPE $UNK
  java -jar $JAR_FILE --build-config $CHAR $CHAR_TYPE $UNK $CONFIG_BIN
elif [ "$MODE" = "check-dict" ]; then
  file_exists $MORPHEME
  java -jar $JAR_FILE --check-dict $MORPHEME $DICT_BIN
elif [ "$MODE" = "check-matrix" ]; then
  file_exists $MATRIX
  java -jar $JAR_FILE --check-matrix $MATRIX $MATRIX_BIN
elif [ "$MODE" = "debug" ]; then
  java -jar $JAR_FILE --debug $DICT_BIN $MATRIX_BIN $CONFIG_BIN
else
  usage
fi
