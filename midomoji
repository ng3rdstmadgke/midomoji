#!/bin/bash

function usage {
cat >&2 <<EOF
#####################################################################################
# [ usage ]
#   ./midomoji [ options ]
#
# [ options ]
#   -m check         トライ木と連接コスト表のチェックを行う
#      build-dict    辞書のビルド
#      build-config  辞書のビルド
#      debug         デバッグコンソール起動
#   -d [DICT] 辞書を指定(フルパスで指定)
#   -h        ヘルプ
#
#####################################################################################
EOF
}

function errlog {
  MSG=$1
  echo "[Error] $MSG" >&2
  exit 1
}

function infolog {
  MSG=$1
  echo "[Info] $MSG" >&2
}

function file_exists {
for file in $@; do
  if [ ! -r "$file" ]; then
    errlog "$file is not found."
  fi
done
}

DATE=$(date "+%Y%m%d%H%M%S")
SCRIPT_DIR=$(cd $(dirname $0); pwd)
DICT_DIR=$SCRIPT_DIR/dictionary
MATRIX=$DICT_DIR/matrix.def
MORPHEME=$DICT_DIR/morpheme.csv
POS_ID=$DICT_DIR/pos-id.def
DICT_SET=$DICT_DIR/dictionary_set.bin
CONFIG=$DICT_DIR/config.bin
CHAR=$DICT_DIR/char.tsv
CHAR_TYPE=$DICT_DIR/char_type.tsv
UNK=$DICT_DIR/unk.tsv
MODE=
while [ "$#" != 0 ]; do
  if [ "$1" = "-m" ]; then
    shift
    MODE=$1
  elif [ "$1" = "-d" ]; then
    shift
    DICT_SET=$1
  elif [ "$1" = "-h" ]; then
    usage
  fi
  shift
done


JAR_FILE=$SCRIPT_DIR/target/scala-2.12/midomoji.jar
file_exists $JAR_FILE

if [ "$MODE" = "check" ]; then
  file_exists $DICT_SET $MATRIX $MORPHEME
  infolog "check matrix ..."
  java -jar $JAR_FILE --check-matrix $DICT_SET $MATRIX
  infolog "check prefixtree ..."
  java -jar $JAR_FILE --check-prefixtree $DICT_SET $MORPHEME
elif [ "$MODE" = "build-dict" ]; then
  file_exists $MATRIX $POS_ID $MORPHEME
  if [ -e "$DICT_SET" ]; then
    mv $DICT_SET ${DICT_SET}.$DATE
  fi
  infolog "build dictionary ..."
  java -jar $JAR_FILE --build $MATRIX $POS_ID $MORPHEME $DICT_SET
elif [ "$MODE" = "build-config" ]; then
  file_exists $CHAR $CHAR_TYPE $UNK
  if [ -e "$CONFIG" ]; then
    mv $CONFIG ${CONFIG}.$DATE
  fi
  java -jar $JAR_FILE --build-config $CHAR $CHAR_TYPE $UNK $CONFIG
elif [ "$MODE" = "debug" ]; then
  java -jar $JAR_FILE --debug
fi
